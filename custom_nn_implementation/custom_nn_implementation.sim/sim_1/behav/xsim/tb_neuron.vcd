$date
   Tue Aug  5 23:23:40 2025
$end

$version
  2023.2
  $dumpfile ("tb_neuron.vcd") 
$end

$timescale
  1ps
$end

$scope module tb_neuron $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 1 # input_valid $end
$var reg 16 $ input_val [15:0] $end
$var wire 16 % out [15:0] $end
$var wire 1 & out_valid $end
$var integer 32 ' i [31:0] $end
$var integer 32 ( f [31:0] $end
$scope module uut $end
$var wire 1 ) clk $end
$var wire 1 * rst $end
$var wire 16 + input_val [15:0] $end
$var wire 1 , input_valid $end
$var wire 16 % out [15:0] $end
$var reg 1 - out_valid $end
$var wire 1 . read_en $end
$var wire 16 / weight [15:0] $end
$var wire 1 0 mux_valid $end
$var wire 33 1 combo_sum [32:0] $end
$var wire 33 2 biased_sum [32:0] $end
$var reg 3 3 input_index [2:0] $end
$var reg 32 4 product [31:0] $end
$var reg 32 5 sum [31:0] $end
$var reg 32 6 bias [31:0] $end
$var reg 1 7 input_valid_d1 $end
$var reg 1 8 input_valid_d2 $end
$var reg 1 9 sigvalid $end
$var reg 16 : input_reg [15:0] $end
$var reg 1 ; muxvalid_d $end
$var reg 1 < muxvalid_f $end
$scope module weight_mem $end
$var wire 1 ) clk $end
$var wire 1 . ren $end
$var wire 2 = radd [1:0] $end
$var reg 16 > wout [15:0] $end
$upscope $end
$scope module relu_act $end
$var wire 1 ) clk $end
$var wire 32 ? x [31:0] $end
$var reg 16 @ out [15:0] $end
$upscope $end
$upscope $end
$scope begin Block60_11 $end
$var integer 32 A i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
1"
0#
b0 $
bx %
x&
bx '
b11111111111111111011000111100000 (
0)
1*
b0 +
0,
x-
0.
bx /
x0
bx 1
bx 2
bx 3
bx 4
bx 5
b10000000000000000 6
x7
x8
x9
bx :
x;
x<
bx =
bx >
bx ?
bx @
b100 A
$end

#5000
1!
b0 %
1)
b10000000000000000 2
b0 3
b0 5
07
b0 :
b0 =
b0 ?
b0 @

#10000
0!
0)

#15000
1!
1)
00
08
09

#20000
0!
0"
0)
0*

#25000
1!
0&
1)
0-
0;

#30000
0!
0)

#35000
1!
1)
0<

#40000
0!
1#
b1 $
b0 '
0)
b1 +
1,
1.

#45000
1!
1)
b1 /
b1 3
17
b1 :
b1 =
b1 >

#50000
0!
b10 $
b1 '
0)
b10 +

#55000
1!
1)
10
b1 1
b10 3
b1 4
18
b10 :
b10 =

#60000
0!
b11 $
b10 '
0)
b11 +

#65000
1!
1)
b11 1
b10000000000000001 2
b11 3
b10 4
b1 5
b11 :
1;
b11 =
b1 ?

#70000
0!
b100 $
b11 '
0)
b100 +

#75000
1!
1)
b110 1
b10000000000000011 2
b100 3
b11 4
b11 5
b100 :
b0 =
b11 ?

#80000
0!
0#
b100 '
0)
0,
0.

#85000
1!
1)
b1010 1
b10000000000000110 2
b100 4
b110 5
07
b110 ?

#90000
0!
0)

#95000
1!
1)
00
b1110 1
b10000000000001010 2
b1010 5
08
b1010 ?

#100000
0!
0)

#105000
1!
1)
0;
1<

#110000
0!
0)

#115000
1!
1)
b10000000000001110 1
b100000000000001010 2
b10000000000001010 5
19
0<
b10000000000001010 ?

#120000
0!
0)

#125000
1!
b10000 %
1&
1)
1-
09
b10000 @

#130000
0!
0)

#135000
1!
0&
1)
0-
b100 1
b10000000000000000 2
b0 3
b0 5
b0 ?

#140000
0!
0)

#145000
1!
b0 %
1)
b0 @

#150000
0!
0)

#155000
1!
1)

#160000
0!
0)

#165000
1!
1)

#170000
0!
0)

#175000
1!
1)

#180000
0!
0)

#185000
1!
1)

#190000
0!
0)

#195000
1!
1)

#200000
0!
0)

#205000
1!
1)

#210000
0!
0)

#215000
1!
1)

#220000
0!
0)
